name: Flutter CI/CD with Telegram

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-apk:
    name: Build apk App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17.0.10'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Get version info
        id: version
        run: |
          echo "VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Send APK to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -F chat_id="${TELEGRAM_CHAT_ID}" \
               -F document=@"build/app/outputs/flutter-apk/app-release.apk" \
               https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument

#      - name: Send notification
#        if: always()
#        env:
#          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#        run: |
#          if [ "${{ job.status }}" == "success" ]; then
#            STATUS="✅ Success"
#          else
#            STATUS="❌ Failed"
#          fi
#
#          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
#               -d chat_id="${TELEGRAM_CHAT_ID}" \


  build-web:
    name: Build Web App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Get version info
        id: version
        run: |
          echo "VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Archive Web Build
        run: |
          cd build/web
          zip -r ../../web-build.zip .
          cd ../..
          ls -lh web-build.zip

      - name: Send Web Build to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo "⚠️ Telegram secrets not set. Skipping notification."
            exit 0
          fi
          
          echo "✅ Sending Web build to Telegram..."
          
          RESPONSE=$(curl -F chat_id="${TELEGRAM_CHAT_ID}" \
               -F document=@"web-build.zip" \
               https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument)
          
          if echo "$RESPONSE" | grep -q '"ok":true'; then
            echo "✅ Successfully sent Web build to Telegram!"
          else
            echo "❌ Failed to send to Telegram: $RESPONSE"
            exit 1
          fi
#      - name: Send notification
#        if: always()
#        env:
#          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#        run: |
#          if [ "${{ job.status }}" == "success" ]; then
#            STATUS="✅ Success"
#          else
#            STATUS="❌ Failed"
#          fi
#
#          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
#               -d chat_id="${TELEGRAM_CHAT_ID}" \
#

  #
  build-windows:
    name: Build Windows App
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Get version info
        id: version
        shell: bash
        run: |
          echo "VERSION=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2)" >> $GITHUB_OUTPUT
          echo "COMMIT_MSG=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

      - name: Remove unnecessary files
        shell: powershell
        run: |
          Remove-Item -Recurse -Force build/windows/x64/runner/Release/*.pdb -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force build/windows/x64/runner/Release/*.exp -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force build/windows/x64/runner/Release/*.lib -ErrorAction SilentlyContinue

      - name: Archive Windows Build
        shell: powershell
        run: |
          Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath windows-build.zip
          Get-Item windows-build.zip | Select-Object Name, Length

      - name: Send Windows Build to Telegram
        shell: bash
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          if [ -z "$TELEGRAM_BOT_TOKEN" ] || [ -z "$TELEGRAM_CHAT_ID" ]; then
            echo "⚠️ Telegram secrets not set. Skipping notification."
            exit 0
          fi

          echo "✅ Sending Windows build to Telegram..."

          RESPONSE=$(curl -F chat_id="${TELEGRAM_CHAT_ID}" \
               -F document=@"windows-build.zip" \
               https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendDocument)

          if echo "$RESPONSE" | grep -q '"ok":true'; then
            echo "✅ Successfully sent Windows build to Telegram!"
          else
            echo "❌ Failed to send to Telegram: $RESPONSE"
            exit 1
          fi
#      - name: Send notification
#        if: always()
#        env:
#          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#        run: |
#          if [ "${{ job.status }}" == "success" ]; then
#            STATUS="✅ Success"
#          else
#            STATUS="❌ Failed"
#          fi
#
#          curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \
#               -d chat_id="${TELEGRAM_CHAT_ID}" \
#
